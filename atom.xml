<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Niewazny&#39;s blog</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-11-15T08:37:47.027Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Niewazny</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>一个简单的Java程序、注释</title>
    <link href="http://example.com/%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84Java%E7%A8%8B%E5%BA%8F%E3%80%81%E6%B3%A8%E9%87%8A/"/>
    <id>http://example.com/%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84Java%E7%A8%8B%E5%BA%8F%E3%80%81%E6%B3%A8%E9%87%8A/</id>
    <published>2022-11-14T12:02:08.000Z</published>
    <updated>2022-11-15T08:37:47.027Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="HelloWorld-第一个Java程序"><a href="#HelloWorld-第一个Java程序" class="headerlink" title="HelloWorld! 第一个Java程序"></a>HelloWorld! 第一个Java程序</h1><p>下面是经典的HelloWorld程序</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloWorld</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Hello,world!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面逐一地查看这段代码:<br><code>public</code>：称为访问修饰符,这些修饰符用于控制程序的其他部分对这段代码的访问级别.<br><code>class</code>：称为类,是一个程序的基本单位,可以看作程序逻辑的一个容器,定义了应用程序的行为.<br><code>HelloWorld</code>:为<code>class</code>后面紧跟着的<em>类名</em><sup id="fnref:1"><a href="#fn:1" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="类名：必须以字母开头的任意字母与数字组合.长度基本没有限制.一个好的类名约定使用驼峰命名法.">[1]</span></a></sup><br><code>&#123;&#125;</code>:大括号划分了程序的各各部分.Java中任何方法的代码都必须以”{“开始,用”}”结束.<br><code>static void</code>:暂不作说明.<br><code>main()</code>:每个Java程序都必须有一个main方法<br><code>System.out.println()</code>:我们使用<code>System.out</code>对象并调用了它的<code>println</code>方法.注意,点号(.)用于调用方法.Java中使用的通用语法是:<code>object.method(parameters)</code></p><h1 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h1><p>Java中有三种注释如下：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 这是第一种</span></span><br><span class="line"><span class="comment"> * 注释方法</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">这是第二种注释方法</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloWorld</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;  <span class="comment">/*这也是第二种注释方法*/</span></span><br><span class="line">        System.out.println(<span class="string">&quot;Hello,world!&quot;</span>); <span class="comment">//这是第三种注释方法</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第一种：可以用来自动生成文档.<br>第二种：在Java中,不能简单地把代码用&#x2F;*和*&#x2F; 括起来作为注释,因为这段代码本身可能包含一个*&#x2F;界定符.<br>第三种:最常用的注释,从&#x2F;&#x2F;开始到本行结尾都是注释.</p><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">类名：必须以字母开头的任意字母与数字组合.长度基本没有限制.一个好的类名约定使用驼峰命名法.<a href="#fnref:1" rev="footnote"> ↩</a></span></li></ol></div></div>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;h1 id=&quot;HelloWorld-第一个Java程序&quot;&gt;&lt;a href=&quot;#H</summary>
      
    
    
    
    <category term="Java笔记" scheme="http://example.com/categories/Java%E7%AC%94%E8%AE%B0/"/>
    
    <category term="Java的基本程序设计结构" scheme="http://example.com/categories/Java%E7%AC%94%E8%AE%B0/Java%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E7%BB%93%E6%9E%84/"/>
    
    
  </entry>
  
  <entry>
    <title>intro</title>
    <link href="http://example.com/intro/"/>
    <id>http://example.com/intro/</id>
    <published>2022-11-14T11:58:09.000Z</published>
    <updated>2022-11-15T09:20:02.789Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><strong>本博客仅供作为个人Java的学习笔记,如有不妥之处,望及时联系本人</strong></p><p>sfg</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;p&gt;&lt;strong&gt;本博客仅供作为个人Java的学习笔记,如有不妥之处,望及时联</summary>
      
    
    
    
    <category term="Java笔记" scheme="http://example.com/categories/Java%E7%AC%94%E8%AE%B0/"/>
    
    <category term="intro" scheme="http://example.com/categories/Java%E7%AC%94%E8%AE%B0/intro/"/>
    
    
  </entry>
  
  <entry>
    <title>数据类型</title>
    <link href="http://example.com/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
    <id>http://example.com/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</id>
    <published>2022-11-13T17:49:46.000Z</published>
    <updated>2022-11-15T08:48:05.138Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h1><h2 id="整型"><a href="#整型" class="headerlink" title="整型"></a>整型</h2><p>整形用于表示没看有小数部分的数，可以是负数。Java提供了4种整型，如下表所示。</p><table><thead><tr><th align="center">类型</th><th align="center">存储需求</th><th align="center">取值范围</th></tr></thead><tbody><tr><td align="center">int</td><td align="center">4字节</td><td align="center">-2 147 483 648 ~ 2 147 483 647</td></tr><tr><td align="center">short</td><td align="center">2字节</td><td align="center">-32 768 ~ 32 767</td></tr><tr><td align="center">long</td><td align="center">8字节</td><td align="center">-9 223 372 036 854 775 808 ~ 9 223 372 036 854 775 807</td></tr><tr><td align="center">byte</td><td align="center">1字节</td><td align="center">-127 ~ 128</td></tr></tbody></table><p>通常情况下,int类型最常用.byte和short类型主要用于特定的应用场合,例如,底层的文件处理或存储空间有限时的大数组.<br>##浮点类型<br>浮点类型用于表示</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;h1 id=&quot;数据类型&quot;&gt;&lt;a href=&quot;#数据类型&quot; class=&quot;head</summary>
      
    
    
    
    <category term="Java笔记" scheme="http://example.com/categories/Java%E7%AC%94%E8%AE%B0/"/>
    
    <category term="Java的基本程序设计结构" scheme="http://example.com/categories/Java%E7%AC%94%E8%AE%B0/Java%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E7%BB%93%E6%9E%84/"/>
    
    
  </entry>
  
</feed>
